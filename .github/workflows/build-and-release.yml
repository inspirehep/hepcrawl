name: Build and release

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]


jobs:
  Test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        suite:
          [
            unit,
            functional_wsp,
            functional_arxiv,
            functional_desy,
            functional_cds,
            functional_pos,
            functional_elsevier,
            functional_aps
          ]
        python-version: [2.7]

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install python dependencies
        run: |
          python -m pip install pip==24.0
          pip install setuptools wheel check-manifest
          pip install -e .[tests]

      - name: Show python dependencies
        run: |
          pip freeze

      - name: Install dependencies
        run: |
          docker-compose -f docker-compose.deps.py2.yml build
          docker-compose -f docker-compose.test.py2.yml run --rm scrapyd-deploy

      - name: Print logs if failure
        if: ${{ failure() }}
        run: |
          docker-compose -f docker-compose.test.py2.yml logs --tail=200

      - name: Run tests
        run: |
          docker-compose -f docker-compose.test.py2.yml run --rm ${{ matrix.suite }}


  Release:
    if: ${{ github.event_name == 'push' }}
    needs: Test
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install python dependencies
        run: |
          pip install --user --upgrade pip
          pip --no-cache-dir install --user setuptools wheel check-manifest
          pip --no-cache-dir install --user -e .[tests]

      - name: Build package
        run: python setup.py sdist bdist_wheel

      - name: Publish package
        uses: pypa/gh-action-pypi-publish@v1.3.1
        with:
          user: __token__
          password: ${{ secrets.PYPI_PASSWORD }}
